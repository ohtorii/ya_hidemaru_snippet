/*マッチするスニペットファイルを返す

引数	[0]コマンド名
		[1]コマンド数
		[2]GUIから設定したスニペットファイル(option)

return	スニペットファイルの絶対パス
		(例) "c:/hidemaru_script/snippets/.c.cpp/for.%.%.txt"
*/

$g_file_attr_arg	= ".%";
$g_file_attr_varg	= "._";

/*スニペットファイルへの絶対パス
	(ex)
	[0]="c:/hidemaru_macro/snippets/.c.cpp/for.txt"
	[1]="c:/hidemaru_macro/snippets/.c.cpp/for.%.txt"
	[2]="c:/hidemaru_macro/snippets/.c.cpp/for.%.%.txt"
*/
$g_snippet_file[0]			= "";


/*スニペットファイルのパスと拡張子を取り除いたベース名
	(ex)
	[0]="for"
	[1]="for.%"
	[2]="for.%.%"

（備考）検索で利用。
*/
$g_snippet_file_basename[0]	= "";

/* $g_snippet_file と $g_snippet_file_basename の長さ。
*/
#g_snippet_file_num	= 0;


/*スニペットのパス

$g_snippeth_paths[0]	 = GUIから設定したスニペットファイル
$g_snippeth_paths[1..10] = ユーザー スニペットディレクトリ

ユーザー スニペットディレクトリ(option)について
	config.ini -> [snippets] -> user_path[0-9]に対応します。
*/
$g_snippeth_paths[0]="";
#g_snippeth_path_num=0;






////////////////////////////////////////////////////////////////////////////
//	メイン処理
////////////////////////////////////////////////////////////////////////////
call main 	getarg(0),val(getarg(1)), getarg(2);
endmacro $$return;


main:
	call start $$1,##2,$$3;
	return $$return;


start:
	$$cmd=$$1;
	##num=##2;
	$$system_snippet_path=$$3;
	if($$system_snippet_path==""){
		//システムスニペットとユーザースニペットのパスを検索対象にする
		call SetSnippetPath;
		if(! ##return){
			return "";
		}
	}else{
		//GUIからスニペットファイルを明示的に指定した場合
		$g_snippeth_paths[0]=$$system_snippet_path;
		#g_snippeth_path_num =1;
	}
	//call DumpSnippetPaths;

	##i=0;
	while(##i < #g_snippeth_path_num){
		call FindSnippetFile $$cmd, ##num, $g_snippeth_paths[##i];
		if($$return != ""){
			return $$return;
		}
		##i = ##i + 1;
	}
	return "";


SetSnippetPath:
	#g_snippeth_path_num=0;
	$$get_current_snippet_mode_macro=currentmacrodirectory+"\\ya_util_get_current_snippet_mode.mac";

	//
	//$g_snippeth_pathsへ、iniファイル中のユーザースニペットを設定する
	//
	execmacro $$get_current_snippet_mode_macro, "rel";
	$$rel_path=getresultex(-1);

	$$ini=getstaticvariable("ini_abs_filename",1);
	##i=0;
	while(##i < 10){
		$$key  =sprintf("user_path%d",##i);
		call GetCorrectUserSnippetPath $$ini, "snippets", $$key, $$rel_path;
		$$value=$$return;
		if($$value!=""){
			$g_snippeth_paths[#g_snippeth_path_num] = $$value;
			#g_snippeth_path_num  = #g_snippeth_path_num + 1;
		}
		##i = ##i + 1;
	}

	//
	//$g_snippeth_pathsへ、システムパスを設定する
	//
	execmacro $$get_current_snippet_mode_macro,"abs";
	$g_snippeth_paths[#g_snippeth_path_num] = getresultex(-1);
	if($g_snippeth_paths[#g_snippeth_path_num]==""){
		return false;
	}
	#g_snippeth_path_num = #g_snippeth_path_num + 1;

	return true;


GetCorrectUserSnippetPath:
	$$ini		=$$1;
	$$section	=$$2;
	$$key		=$$3;
	$$rel_path	=$$4;

	$$value=getinistrw($$ini,$$section,$$key);
	if($$value==""){
		return "";
	}
	$$user_snippet_dir=$$value+"\\"+$$rel_path;

	//環境変数を展開する
	execmacro currentmacrodirectory+"\\ya_util_expand_environment_strings.mac", $$user_snippet_dir;
	$$user_snippet_dir=getresultex(-1);
	if($$user_snippet_dir==""){
		return "";
	}
	if((existfile($$user_snippet_dir,1) & 0x00000010) != 0){
		return $$user_snippet_dir;
	}
	return "";


/*ディレクトリを上りながらマッチするスニペットファイルを探す
*/
FindSnippetFile:
	$$cmd=$$1;
	##num=##2;
	$$abs_snippets_dir = $$3;

	##count=32;//無限ループ防止（念のため）
	while((0 < ##count) && (""!=$$abs_snippets_dir)){
		call FindSnippetFileOne $$abs_snippets_dir+"\\", $$cmd, ##num;
		if("" != $$return){
			return $$return;
		}

		call GetParentFolderName $$abs_snippets_dir;
		$$abs_snippets_dir = $$return;

		call IsSameFolder $$abs_snippets_dir;
		if(##return){
			break;
		}
		##count=##count-1;
	}
	return "";


FindSnippetFileOne:
	$$abs_snippets_dir=$$1;
	$$cmd=$$2;
	##num=##3;

	//
	//$$cmd にマッチするファイルを列挙する。
	//
	call EnumeSnippetFileNames $$abs_snippets_dir, $$cmd;
	if(! ##return){
		return "";
	}
	//
	//完全一致を探す
	//
	call MakeSnippetBaseFileName $$cmd,##num-1;
	$$result=$$return;
	call MatchSnippetFileName $$result;
	$$result = $$return;
	if(""!=$$result){
		return $$result;
	}
	//
	//_を使ったパターンを探す。
	//(ex) 	hoge.%._
	//		hoge._
	//
	##i=##num-1;
	while(0 <= ##i){
		call MakeSnippetBaseFileName $$cmd,##i;
		$$result = $$return + $g_file_attr_varg;
		call MatchSnippetFileName $$result;
		$$result = $$return;
		if(""!=$$result){
			return $$result;
		}
		##i=##i-1;
	}
	return "";

MatchSnippetFileName:
	$$basename = $$1;
	##i=0;
	while(##i < #g_snippet_file_num){
		if($g_snippet_file_basename[##i] == $$basename){
			return $g_snippet_file[##i];
		}
		##i=##i+1;
	}
	return "";


/*ファイルのベース名を作る
(ex)
	$$cmd	= for
	##num	= 3
	return	= for.%.%.%
*/
MakeSnippetBaseFileName:
	$$cmd 	= $$1;
	##num 	= ##2;
	$$result= $$cmd;
	##i=0;
	while(##i < ##num){
		$$result=$$result+$g_file_attr_arg;
		##i=##i+1;
	}
	return $$result;

EnumeSnippetFileNames:
	/*
	（引数の例）
	$$1=C:\Users\foo\GitHub\ya_hidemaru_snippet\snippets\functions
	$$2=time
	*/
	$$abs_snippets_dir	= $$1;
	$$cmd 				= $$2;

	##objFSO 		= createobject("Scripting.FileSystemObject");
	##objFolder 	= member( ##objFSO, "GetFolder", $$abs_snippets_dir );
	##objCollection = getpropobj(##objFolder,"Files");

	#g_snippet_file_num=0;
	while (true) {
		##objFile = getcollection( ##objCollection );
		if(##objFile==0){
			break;
		}
		$$file = getpropstr(##objFile,"Name");
		call StartsWith $$file, $$cmd;
		if(##return){
			$g_snippet_file[#g_snippet_file_num]=$$abs_snippets_dir + $$file;
			call MakeSnippetBaseName $$file;
			$g_snippet_file_basename[#g_snippet_file_num]=$$return;
			#g_snippet_file_num=#g_snippet_file_num+1;
		}
	}

	releaseobject ##objFSO;
	##objFSO=0;

	if(#g_snippet_file_num){
		return true;
	}
	return false;

/*スニペットファイルのベース名を作る
"c:/hidemaru_macro/snippets/.c.cpp/for.%.txt" → "for.%"
*/
MakeSnippetBaseName:
	$$name 	= $$1;
	##len 	= strlen($$name);

	//
	//拡張子の削除
	//
	##index=strrstr($$name,".");
	if(0 == ##index){
		//全部拡張子。とりあえず無視する。
		return "";
	}
	if(0 < ##index){
		$$name = leftstr($$name,##index);
	}
	if(0){
		//ディレクトリは無いのでコメントアウト

		//
		//ディレクトリの削除
		//
		##index_0=strrstr($$name,"/");
		##index_1=strrstr($$name,"\\");
		if(##index_0 < ##index_1){
			##index = ##index_1;
		}else{
			##index = ##index_0;
		}
		if(-1 != ##index){
			$$name=rightstr($$name,(##len-##index)+1);
		}
	}
	return $$name;

/*同じフォルダかどうか
memo:「パス区切り(/\)・大文字小文字」の違いがあるのでファイルシステムに任せる。
*/
IsSameFolder:
	$$dir1 = $$1;
	$$dir2 = $$2;
	##obj 	= createobject("Scripting.FileSystemObject");
	##fld0 	= callmethod_returnobj( ##obj, "GetFolder", $$dir1);
	##fld1 	= callmethod_returnobj( ##obj, "GetFolder", $$dir2);
	$$path0	= getpropstr(##fld0,"Path");
	$$path1	= getpropstr(##fld1,"Path");
	releaseobject ##fld0;
	releaseobject ##fld1;
	releaseobject ##obj;
	return $$path0 == $$path1;


/*親フォルダを返す*/
GetParentFolderName:
	$$dir = $$1;
	##obj = createobject("Scripting.FileSystemObject");
	$$result = callmethod_returnstr( ##obj, "GetParentFolderName", $$dir);
	releaseobject ##obj;
	return $$result;

/*文字列$$1が$$2で開始しているか調べる
*/
StartsWith:
	##index=strstr($$1,$$2);
	if(##index==0){
		return true;
	}
	return false;


DumpSnippetPaths:
	debuginfo "====DumpSnippetPaths====";
	##i=0;
	while(##i<#g_snippeth_path_num){
		debuginfo sprintf("[%d]%s",##i,$g_snippeth_paths[##i]);
		##i = ##i + 1;
	}
	return ;
