/* TOC generator for Markdown.

=========
Format
=========
toc depth

=========
Example
=========
#before
toc 2

#after
- [Feature](#feature)
- [Install](#install)
    :
    :

#Thanks.
https://github.com/stakiran/intoc
https://qiita.com/sta/items/9481c94e0fc36f27fa92
*/

$g_tmpfile_base_name = "toc";


disabledraw;
disableinvert;
begingroupundo;
call main;
endgroupundo;
endmacro;


main:
	##edit_hidemaru_handle = val(getarg(1));
	$$python		= getarg(3);
	$$modules_dir	= getarg(5);
	##depth 		= val(getarg(16));	//引数2
	if(##depth<=0){
		##depth=2;
	}

	//
	//編集中のテキスト（未保存 or 保存済）をテンポラリファイルへコピーする。
	//
	execmacro $$modules_dir+"\\hidemaru-macro-util\\create_temp_file.mac", $g_tmpfile_base_name, ".md";
	$$tmp_in_filename_cs=getresultex(-1);
	if($$tmp_in_filename_cs==""){
		return false;
	}
	execmacro $$modules_dir+"\\hidemaru-macro-util\\hidemaru_to_file.mac",$$tmp_in_filename_cs, str(##edit_hidemaru_handle);
	if(getresultex(-1) != "1"){
		return false;
	}

	$$arg = $$python +
			" " + $$modules_dir+"\\markdown\\intoc\\intoc.py" +
			" " + "-i " + $$tmp_in_filename_cs +
			" " + "--parse-depth " + str(##depth);
	runex $$arg
			, 1 			//sync	  0:async 1:sync
			, 0, "" 		//stdin   0:none 1:auto 2:file 3:(reserve) 4:all 5:select
			, 5, "" 		//stdout  0:none 1:auto 2:file 3:add file  4:new 5:insert 6:replace
			, 5, "" 		//stderr  0:none 1:=out 2:file 3:add file  4:new 5:insert 6:replace
			, 1, "" 		//folder  0:none 1:current 2:specify 3:(reserve) 4:exe's folder
			, 2 			//show	  0:auto 1:show 2:hide
			, 1 			//nodraw  0:draw 1:no draw
			, 0 			//unicode 0:ansi 2:unicode
			;
	deletefile $$tmp_in_filename_cs;
	return result;

