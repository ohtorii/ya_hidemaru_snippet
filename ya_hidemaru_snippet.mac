/* Yet another snippet for hidemaru editor.

（導入方法）
	キーアサインして下さい。

（メモ）
	・スニペットのコマンド数は１６個まで。($0-$15)
	  設定を変更したらExpandSnippetFile関数中のexecmacroを修正すること。
*/
disableinvert;
disablebreak;
disablehistory;

////////////////////////////////////////////////////////////////////////////
//		グローバル変数
////////////////////////////////////////////////////////////////////////////
$g_internal_sub_dir = "ya_hidemaru_snippet\\internal";
$g_internal_abs_dir = currentmacrodirectory + "\\" + $g_internal_sub_dir;

execmacro $g_internal_abs_dir + "\\ya_util_get_snippet_dir.mac";
$g_snippets_abs_dir = getresultex(-1);
//long-file-nameのままだと、dengakuのENUMFILE関数で失敗するためshort-path-nameで回避している。
call GetShortPath $g_snippets_abs_dir;
$g_snippets_abs_dir		= $$return + "\\";

execmacro $g_internal_abs_dir + "\\ya_util_get_ini_filename.mac";
$g_ini_abs_filename = getresultex(-1);

/*コマンドの引数情報
*/
$g_args[0]	= "";
#g_args_num	= 0;
$g_args_line="";
$g_snippet_abs_filename="";

//田楽DLLを読み込んだかどうか
#g_dengaku_loaded=false;


$_g_old_searchbuffer = searchbuffer;
#_g_searchoption 	 = searchoption;
disablehistory 0xff;
//動作環境を固定化する。
//折りたたみを維持,部分編集を維持,範囲選択,最後に移動
//マクロ終了時に元に戻る。
setcompatiblemode 0x0003|0x000c|0x0200|0x2000;
call CheckEnvironment;
if(##return){
	call LoadDengaku;
	if(##return){
		call Main;
		call ClearGlovalValue;
		setsearch $_g_old_searchbuffer, #_g_searchoption;
		call UnLoadDengaku;
	}
}
endmacro;


Main:
	call SetGlovalValue;
	if(! ##return){
		message("setstaticvariableで失敗");
		return false;
	}

	/*if(rectselecting){
		message("矩形選択は未対応です。\n");
		return false;
	}*/
	begingroupundo;
	call ParseLine;
	if(! ##return){
		//
		//パースした結果、空白行だった場合
		//
		//補完候補を挿入する
		call Candidate;
		if(! ##return){
			return false;
		}
	}

	//ここでdisabledraw処理を行うこと。
	//（メモ）main関数前でdisabledraw処理を行うとウインドウが再描画されなくなり、
	//		  Candidate処理でメニューを表示したときにウインドウが黒一色になり見た目が悪い。
	disabledraw;
	execmacro currentmacrodirectory+"\\"+$g_internal_sub_dir+"\\ya_match_snippet.mac", $g_args[0],str(#g_args_num),$g_snippet_abs_filename;
	$$abs_snippet_filename = getresultex(-1);
	if("" == $$abs_snippet_filename){
		return false;
	}
	$$run_snippet_mac = $g_internal_abs_dir + "\\ya_expand_snippet.mac";
	execmacro 	$$run_snippet_mac,
				$$abs_snippet_filename,
				$g_args_line,
				str(#g_args_num),
				$g_args[0],
				$g_args[1],
				$g_args[2],
				$g_args[3],
				$g_args[4],
				$g_args[5],
				$g_args[6],
				$g_args[7],
				$g_args[8],
				$g_args[9],
				$g_args[10],
				$g_args[11],
				$g_args[12],
				$g_args[13],
				$g_args[14],
				$g_args[15];
	##exec_result=##return;
	endgroupundo;
	if(! ##exec_result){
		message("execmacro に失敗しました。\nマクロ名:"+$$run_snippet_mac);
		return false;
	}
	return val(getresultex(-1));


CheckEnvironment:
	if(! existfile($g_ini_abs_filename)){
		message("(.ini)ファイルが見つかりません。\nファイル名:"+$g_ini_abs_filename);
		return false;
	}
	return true;

/*１行を空白文字列(半角空白)で分割して取り出す。
パース結果は下記グローバル変数へ格納される。
	$g_args[];
	#g_args_num;
	$g_args_line;

2011/11/05 追加：コマンドを除いた一行を$g_args_lineへ格納するようにした。
*/
ParseLine:
	//一行の文字列を取得
	if(selecting){
		$$linetext = gettext2(seltopcolumn,seltoplineno,selendcolumn,selendlineno,1);
	}else{
		$$linetext = gettext2(0,lineno,linelen2,lineno,1);
	}
	call TokenizeArg $$linetext;
	return ##return;

/*スニペット候補
*/
Candidate:
	execmacro currentmacrodirectory+"\\"+$g_internal_sub_dir+"\\ya_input_command_line.mac";
	$$result_string=getresultex(-1);
	##tab_index=strstr($$result_string,"\t");
	if(##tab_index <= 0){
		return false;
	}
	
	$g_snippet_abs_filename=midstr($$result_string,0,##tab_index);
	call GetDirectoryName $g_snippet_abs_filename;
	$g_snippet_abs_filename=$$return;
	
	call TokenizeArg midstr($$result_string,##tab_index);
	return ##return;


TokenizeArg:
	call LoadDengaku;
	if(! ##return){
		return false;
	}
	$$linetext = $$1;
	$$linetext = dllfuncstr("LTRIM",$$linetext);
	$$linetext_lt = $$linetext;
	$$linetext = dllfuncstr("RTRIM",$$linetext);
	if($$linetext==""){
		return false;
	}

	#g_args_num=0;
	$$tok = " ";
	$$token = dllfuncstr("GETTOKEN",$$linetext,$$tok);
	$$token = dllfuncstr("RTRIM",$$token);
	$$token = dllfuncstr("LTRIM",$$token);
	if(""!=$$token)
	{
		$g_args[#g_args_num]=$$token;
		#g_args_num=1;
	}
	while (1) {
	    if (dllfunc("HASMORETOKENS") == 0) {
			break;
		}

	    $$token = dllfuncstr("GETTOKEN","",$$tok);
	    $$token = dllfuncstr("RTRIM",$$token);
		$$token = dllfuncstr("LTRIM",$$token);
		if(""!=$$token)
		{
			$g_args[#g_args_num]=$$token;
			#g_args_num = #g_args_num+1;
		}
	}
	if(#g_args_num==0){
		return false;
	}
	$g_args_line = rightstr($$linetext_lt, strlen($$linetext_lt)-strlen($g_args[0]));
	$g_args_line = dllfuncstr("LTRIM",$g_args_line);
	return true;


GetDirectoryName:
	/*ディレクトリ名を取得する
	"c:\hoge\foo.txt"	  -> "c:\hoge"
	"c:\hoge/foo.bar.txt" -> "c:\hoge"
	"foo.txt2             -> ""
	*/
	##index_yen=strrstr($$1,"\\");
	##index_slash=strrstr($$1,"/");
	if((##index_yen==-1) && (##index_slash==-1)){
		//ディレクトリ区切り無し
		return "";
	}
	if(##index_slash < ##index_yen){
		return midstr($$1,0,##index_yen);
	}
	return midstr($$1,0,##index_slash);


GetShortPath:
	$$path=$$1;
	##obj=createobject("Scripting.FileSystemObject");
	##f  = callmethod_returnobj( ##obj, "GetFolder", $$path);
    $$ret = getpropstr(##f,"ShortPath");
    releaseobject ##f;
    releaseobject ##obj;
    return $$ret;

SetGlovalValue:
	setstaticvariable "ini_abs_filename",$g_ini_abs_filename,1;
	return result;

ClearGlovalValue:
	setstaticvariable "ini_abs_filename","",1;
	return ;

LoadDengaku:
	if(#g_dengaku_loaded){
		//return true;
	}
	loaddll macrodir + "\\DengakuDLL.dll";
	if (result) {
		#g_dengaku_loaded=true;
		return true;
	}
	loaddll hidemarudir + "\\DengakuDLL.dll";
	if (result) {
		#g_dengaku_loaded=true;
		return true;
	}
	message "田楽DLLのロードに失敗しました\n" + "DengakuDLL.dllが秀丸マクロディレクトリに存在するか確認してください";
	return false;

UnLoadDengaku:
	if(#g_dengaku_loaded){
		freedll;
		#g_dengaku_loaded=false;
	}
	return;
	