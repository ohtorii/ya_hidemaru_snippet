/* Yet another snippet for hidemaru editor.

（導入方法）
	キーアサインして下さい。

（メモ）
	・スニペットのコマンド数は１６個まで。($0-$15)
	  設定を変更したらExpandSnippetFile関数中のexecmacroを修正すること。
*/
disabledraw;
disableinvert;
disablebreak;

////////////////////////////////////////////////////////////////////////////
//		内部処理
////////////////////////////////////////////////////////////////////////////
$g_internal_sub_dir = "ya_hidemaru_snippet\\internal";
$g_internal_abs_dir = currentmacrodirectory + "\\" + $g_internal_sub_dir;

execmacro $g_internal_abs_dir + "\\ya_util_get_snippet_dir.mac";
$g_snippets_abs_dir = getresultex(-1);
//long-file-nameのままだと、dengakuのENUMFILE関数で失敗するためshort-path-nameで回避している。
call GetShortPath $g_snippets_abs_dir;
$g_snippets_abs_dir		= $$return + "\\";

execmacro $g_internal_abs_dir + "\\ya_util_get_ini_filename.mac";
$g_ini_abs_filename = getresultex(-1);



$g_file_attr_arg	= ".%";
$g_file_attr_varg	= "._";


$g_args[0]	= "";
#g_args_num	= 0;
$g_args_line="";

/*スニペットファイルへの絶対パス
	(ex)
	[0]="c:/hidemaru_macro/snippets/.c.cpp/for.txt"
	[1]="c:/hidemaru_macro/snippets/.c.cpp/for.%.txt"
	[2]="c:/hidemaru_macro/snippets/.c.cpp/for.%.%.txt"
*/
$g_snippet_file[0]			= "";

/*スニペットファイルのパスと拡張子を取り除いたベース名
	(ex)
	[0]="for"
	[1]="for.%"
	[2]="for.%.%"

（備考）検索で利用。
*/
$g_snippet_file_basename[0]	= "";

/* $g_snippet_file と $g_snippet_file_basename の長さ。
*/
#g_snippet_file_num	= 0;

$_g_old_searchbuffer = searchbuffer;
#_g_searchoption 	 = searchoption;
disablehistory 0xff;
//動作環境を固定化する。
//折りたたみを維持,部分編集を維持,範囲選択,最後に移動
//マクロ終了時に元に戻る。
setcompatiblemode 0x0003|0x000c|0x0200|0x2000;
call CheckEnvironment;
if(##return){
	call LoadDengaku;
	if(##return){
		call Main;
		call ClearGlovalValue;
		setsearch $_g_old_searchbuffer, #_g_searchoption;
		freedll;
	}
}
endmacro;


Main:
	call SetGlovalValue;
	if(! ##return){
		message("setstaticvariableで失敗");
		return false;
	}

	/*if(rectselecting){
		message("矩形選択は未対応です。\n");
		return false;
	}*/
	begingroupundo;
	call ParseLine;
	if(! ##return){
		//
		//パースした結果、空白行だった場合
		//
		
		//補完候補を挿入する
		call Candidate;
		if(! ##return){
			return false;
		}
	}
	execmacro currentmacrodirectory+"\\"+$g_internal_sub_dir+"\\ya_util_get_current_snippet_mode.mac";
	$$abs_snippets_dir = getresultex(-1);

	call FindSnippetFile $$abs_snippets_dir,$g_args[0],#g_args_num;
	$$abs_snippet_filename = $$return;
	if("" == $$abs_snippet_filename){
		return false;
	}
	$$run_snippet_mac = $g_internal_abs_dir + "\\ya_run_snippet_file.mac";
	execmacro 	$$run_snippet_mac,
				$$abs_snippet_filename,
				$g_args_line,
				str(#g_args_num),
				$g_args[0],
				$g_args[1],
				$g_args[2],
				$g_args[3],
				$g_args[4],
				$g_args[5],
				$g_args[6],
				$g_args[7],
				$g_args[8],
				$g_args[9],
				$g_args[10],
				$g_args[11],
				$g_args[12],
				$g_args[13],
				$g_args[14],
				$g_args[15];
	##exec_result=##return;
	endgroupundo;
	if(! ##exec_result){
		message("execmacro に失敗しました。\nマクロ名:"+$$run_snippet_mac);
		return false;
	}
	return val(getresultex(-1));


CheckEnvironment:
	if(! existfile($g_ini_abs_filename)){
		message("(.ini)ファイルが見つかりません。\nファイル名:"+$g_ini_abs_filename);
		return false;
	}
	return true;
	
/*１行を空白文字列(半角空白)で分割して取り出す。
パース結果は下記グローバル変数へ格納される。
	$g_args[];
	#g_args_num;
	$g_args_line;

2011/11/05 追加：コマンドを除いた一行を$g_args_lineへ格納するようにした。
*/
ParseLine:
	//一行の文字列を取得
	if(selecting){
		$$linetext = gettext2(seltopcolumn,seltoplineno,selendcolumn,selendlineno,1);
	}else{
		$$linetext = gettext2(0,column,linelen2,lineno);
	}
	call TokenaizeArg $$linetext;
	return ##return;

/*スニペット候補
*/
Candidate:
	execmacro currentmacrodirectory+"\\"+$g_internal_sub_dir+"\\ya_candidate.mac";
	$$linetext=getresultex(-1);
	call TokenaizeArg $$linetext;
	return ##return;

TokenaizeArg:
	$$linetext = $$1;
	$$linetext = dllfuncstr("LTRIM",$$linetext);
	$$linetext_lt = $$linetext;
	$$linetext = dllfuncstr("RTRIM",$$linetext);
	if($$linetext==""){
		return false;
	}
	
	#g_args_num=0;
	$$tok = " ";
	$$token = dllfuncstr("GETTOKEN",$$linetext,$$tok);
	$$token = dllfuncstr("RTRIM",$$token);
	$$token = dllfuncstr("LTRIM",$$token);
	if(""!=$$token)
	{
		$g_args[#g_args_num]=$$token;
		#g_args_num=1;
	}
	while (1) {
	    if (dllfunc("HASMORETOKENS") == 0) {
			break;
		}

	    $$token = dllfuncstr("GETTOKEN","",$$tok);
	    $$token = dllfuncstr("RTRIM",$$token);
		$$token = dllfuncstr("LTRIM",$$token);
		if(""!=$$token)
		{
			$g_args[#g_args_num]=$$token;
			#g_args_num = #g_args_num+1;
		}
	}
	if(#g_args_num){
		$g_args_line = rightstr($$linetext_lt, strlen($$linetext_lt)-strlen($g_args[0]));
		$g_args_line = dllfuncstr("LTRIM",$g_args_line);
		return true;
	}
	return false;


/* スニペットファイルを探す
return
	"c:/hidemaru_script/snippets/.c.cpp/for.%.%.txt"
*/
FindSnippetFile:
	$$abs_snippets_dir=$$1;
	$$cmd=$$2;
	##num=##3;

	##count=32;//無限ループ防止（念のため）
	while((0 < ##count) && (""!=$$abs_snippets_dir)){
		call FindSnippetFileInternal $$abs_snippets_dir+"\\", $$cmd, ##num;
		if("" != $$return){
			return $$return;
		}

		call GetParentFolderName $$abs_snippets_dir;
		$$abs_snippets_dir = $$return;

		call IsFolderFinish $$abs_snippets_dir;
		if(##return){
			break;
		}
		##count=##count-1;
	}
	return "";

FindSnippetFileInternal:
	$$abs_snippets_dir=$$1;
	$$cmd=$$2;
	##num=##3;

	//
	//$$cmd にマッチするファイルを列挙する。
	//
	call EnumeSnippetFileNames $$abs_snippets_dir, $$cmd;
	if(! ##return){
		return "";
	}

	//
	//完全一致を探す
	//
	call MakeSnippetBaseFileName $$cmd,##num-1;
	$$result=$$return;
	call MatchSnippetFileName $$result;
	$$result = $$return;
	if(""!=$$result){
		return $$result;
	}

	//
	//_を使ったパターンを探す。
	//(ex) 	hoge.%._
	//		hoge._
	//
	##i=##num-1;
	while(0 <= ##i){
		call MakeSnippetBaseFileName $$cmd,##i;
		$$result = $$return + $g_file_attr_varg;
		call MatchSnippetFileName $$result;
		$$result = $$return;
		if(""!=$$result){
			return $$result;
		}
		##i=##i-1;
	}
	return "";

MatchSnippetFileName:
	$$basename = $$1;
	##i=0;
	while(##i < #g_snippet_file_num){
		if($g_snippet_file_basename[##i] == $$basename){
			return $g_snippet_file[##i];
		}
		##i=##i+1;
	}
	return "";


/*ファイルのベース名を作る
(ex)
	$$cmd	= for
	##num	= 3
	return	= for.%.%.%
*/
MakeSnippetBaseFileName:
	$$cmd 	= $$1;
	##num 	= ##2;
	$$result= $$cmd;
	##i=0;
	while(##i < ##num){
		$$result=$$result+$g_file_attr_arg;
		##i=##i+1;
	}
	return $$result;

EnumeSnippetFileNames:
	$$abs_snippets_dir	= $$1;
	$$cmd 				= $$2;
	$$pattern 			= $$abs_snippets_dir + $$cmd + "*.*";

	#g_snippet_file_num=0;
	##r = dllfunc("ENUMFILE",$$pattern);
	if(! ##r){
		return false;
	}

	##count = 1000;
	while (##count) {
		$$file = dllfuncstr("FINDNEXT");
		if ($$file == "") {
			break
		}
		$g_snippet_file[#g_snippet_file_num]=$$abs_snippets_dir + $$file;
		call MakeSnippetBaseName $$file;
		$g_snippet_file_basename[#g_snippet_file_num]=$$return;
		#g_snippet_file_num=#g_snippet_file_num+1;
		##count=##count-1;
	}
	if(#g_snippet_file_num){
		return true;
	}
	return false;

/*スニペットファイルのベース名を作る
"c:/hidemaru_macro/snippets/.c.cpp/for.%.txt" → "for.%"
*/
MakeSnippetBaseName:
	$$name 	= $$1;
	##len 	= strlen($$name);

	//
	//拡張子の削除
	//
	##index=strrstr($$name,".");
	if(0 == ##index){
		//全部拡張子。とりあえず無視する。
		return "";
	}
	if(0 < ##index){
		$$name = leftstr($$name,##index);
	}
	if(0){
		//ディレクトリは無いのでコメントアウト

		//
		//ディレクトリの削除
		//
		##index_0=strrstr($$name,"/");
		##index_1=strrstr($$name,"\\");
		if(##index_0 < ##index_1){
			##index = ##index_1;
		}else{
			##index = ##index_0;
		}
		if(-1 != ##index){
			$$name=rightstr($$name,(##len-##index)+1);
		}
	}
	return $$name;

/*スニペットが置いてあるディレクトリかどうか
memo:「パス区切り(/\)・大文字小文字」の違いがあるのでファイルシステムに任せる。
*/
IsFolderFinish:
	$$dir = $$1;
	##obj 	= createobject("Scripting.FileSystemObject");
	##fld0 	= callmethod_returnobj( ##obj, "GetFolder", $g_snippets_abs_dir);
	##fld1 	= callmethod_returnobj( ##obj, "GetFolder", $$dir);
	$$path0	= getpropstr(##fld0,"Path");
	$$path1	= getpropstr(##fld1,"Path");
	releaseobject ##fld0;
	releaseobject ##fld1;
	releaseobject ##obj;
	return $$path0 == $$path1;


/*親フォルダを返す*/
GetParentFolderName:
	$$dir = $$1;
	##obj = createobject("Scripting.FileSystemObject");
	$$result = callmethod_returnstr( ##obj, "GetParentFolderName", $$dir);
	releaseobject ##obj;
	return $$result;

GetShortPath:
	$$path=$$1;
	##obj=createobject("Scripting.FileSystemObject");
	##f  = callmethod_returnobj( ##obj, "GetFolder", $$path);
    $$ret = getpropstr(##f,"ShortPath");
    releaseobject ##f;
    releaseobject ##obj;
    return $$ret;

/*フォルダの存在検査*/
IsFolderExists:
	$$dir = $$1;
	##obj = createobject("Scripting.FileSystemObject");
	##result = callmethod_returnnum( ##obj, "FolderExists", $$dir);
	releaseobject ##obj;
	return ##result;


SetGlovalValue:
	setstaticvariable "ini_abs_filename",$g_ini_abs_filename,1;
	return result;

ClearGlovalValue:
	setstaticvariable "ini_abs_filename","",1;
	return ;

LoadDengaku:
	loaddll macrodir + "\\DengakuDLL.dll";
	if (result) {
		return true;
	}
	loaddll hidemarudir + "\\DengakuDLL.dll";
	if (result) {
		return true;
	}
	message "田楽DLLのロードに失敗しました\n" + "DengakuDLL.dllが秀丸マクロディレクトリに存在するか確認してください";
	return false;
	