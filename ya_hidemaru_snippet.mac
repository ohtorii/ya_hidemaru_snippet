/* Yet another snippet for hidemaru editor.

（導入方法）
	キーアサインして下さい。

（メモ）
	・スニペットのコマンド数は１６個まで。($0-$15)
	  設定を変更したらExpandSnippetFile関数中のexecmacroを修正すること。
*/

//
//動作環境を固定化する。
//
setcompatiblemode
	0x00000002 |	/* 折りたたみを無視してなるべく維持 */
	0x00000008 |	/* 部分編集を無視してなるべく維持 */
	0x00000030 |	/* 同じファイルを２つ開くことを禁止する（ジャンプする） */
	0x00000200 |	/*検索での表示　→　範囲選択*/
	0x00002000 |	/*貼り付け後のカーソル位置　→　最後に移動 */
	0x00020000 ;	/*マクロ終了後に検索条件をマクロ実行前と同じに戻します。（V8.20以降） */


disableinvert;
disablebreak;
disablehistory;

////////////////////////////////////////////////////////////////////////////
//		グローバル変数
////////////////////////////////////////////////////////////////////////////
$g_internal_sub_dir = "internal";
$g_internal_abs_dir = currentmacrodirectory + "\\" + $g_internal_sub_dir;

execmacro $g_internal_abs_dir + "\\ya_util_get_snippet_dir.mac";
$g_snippets_abs_dir = getresultex(-1);
//long-file-nameのままだと、dengakuのENUMFILE関数で失敗するためshort-path-nameで回避している。
call GetShortPath $g_snippets_abs_dir;
$g_snippets_abs_dir		= $$return + "\\";

execmacro $g_internal_abs_dir + "\\ya_util_get_ini_filename.mac";
$g_ini_abs_filename = getresultex(-1);

/*コマンドの引数情報
*/
$g_args[0]	= "";
#g_args_num	= 0;
$g_args_line="";
$g_snippet_abs_filename="";

//田楽DLLのハンドル
#g_dll_dengaku=0;


disablehistory 0xff;
call CheckEnvironment;
if(##return){
	call LoadDll;
	if(##return){
		call Main;
		call ClearGlovalValue;
	}
}
call UnLoadDll;
endmacro;


Main:
	call SetGlovalValue;
	if(! ##return){
		message("setstaticvariableで失敗");
		return false;
	}

	/*if(rectselecting){
		message("矩形選択は未対応です。\n");
		return false;
	}*/
	begingroupundo;
	call ParseLine;
	if(! ##return){
		//
		//パースした結果、空白行だった場合
		//
		//補完候補を挿入する
		call Candidate;
		if(! ##return){
			return false;
		}
	}

	//ここでdisabledraw処理を行うこと。
	//（メモ）main関数前でdisabledraw処理を行うとウインドウが再描画されなくなり、
	//		  Candidate処理でメニューを表示したときにウインドウが黒一色になり見た目が悪い。
	disabledraw;
	execmacro currentmacrodirectory+"\\"+$g_internal_sub_dir+"\\ya_match_snippet.mac", $g_args[0],str(#g_args_num),$g_snippet_abs_filename;
	$$abs_snippet_filename = getresultex(-1);
	if("" == $$abs_snippet_filename){
		return false;
	}
	$$run_snippet_mac = $g_internal_abs_dir + "\\ya_expand_snippet.mac";
	execmacro 	$$run_snippet_mac,
				$$abs_snippet_filename,
				$g_args_line,
				str(#g_args_num),
				$g_args[0],
				$g_args[1],
				$g_args[2],
				$g_args[3],
				$g_args[4],
				$g_args[5],
				$g_args[6],
				$g_args[7],
				$g_args[8],
				$g_args[9],
				$g_args[10],
				$g_args[11],
				$g_args[12],
				$g_args[13],
				$g_args[14],
				$g_args[15];
	##exec_result=##return;
	endgroupundo;
	if(! ##exec_result){
		message("execmacro に失敗しました。\nマクロ名:"+$$run_snippet_mac);
		return false;
	}
	return val(getresultex(-1));


CheckEnvironment:
	if(! existfile($g_ini_abs_filename)){
		message("(.ini)ファイルが見つかりません。\nファイル名:"+$g_ini_abs_filename);
		return false;
	}
	return true;

/*１行を空白文字列(半角空白)で分割して取り出す。
パース結果は下記グローバル変数へ格納される。
	$g_args[];
	#g_args_num;
	$g_args_line;

2011/11/05 追加：コマンドを除いた一行を$g_args_lineへ格納するようにした。
*/
ParseLine:
	//一行の文字列を取得
	if(selecting){
		$$linetext = gettext2(seltopcolumn,seltoplineno,selendcolumn,selendlineno,1);
	}else{
		$$linetext = gettext2(0,lineno,linelen2,lineno,1);
	}
	call TokenizeArg $$linetext;
	return ##return;

/*スニペット候補
*/
Candidate:
	execmacro currentmacrodirectory+"\\"+$g_internal_sub_dir+"\\ya_input_command_line.mac";
	$$result_string=getresultex(-1);
	##tab_index=strstr($$result_string,"\t");
	if(##tab_index <= 0){
		return false;
	}

	$g_snippet_abs_filename=midstr($$result_string,0,##tab_index);
	call GetDirectoryName $g_snippet_abs_filename;
	$g_snippet_abs_filename=$$return;

	call TokenizeArg midstr($$result_string,##tab_index);
	return ##return;


TokenizeArg:
	call LoadDll;
	if(! ##return){
		return false;
	}
	$$linetext = $$1;

	call TrimL $$linetext;
	$$linetext=$$return;

	$$linetext_lt = $$linetext;

	call TrimR $$linetext;
	$$linetext=$$return;
	if($$linetext==""){
		return false;
	}

	#g_args_num=split($g_args,$$linetext," ");
	if(#g_args_num==0){
		return false;
	}

	//
	//$g_args_line 変数の作成
	//
	$g_args_line = rightstr($$linetext_lt, strlen($$linetext_lt)-strlen($g_args[0]));
	call TrimL $g_args_line;
	$g_args_line=$$return;

	//call DumpArgs;

	return true;


GetDirectoryName:
	/*ディレクトリ名を取得する
	"c:\hoge\foo.txt"	  -> "c:\hoge"
	"c:\hoge/foo.bar.txt" -> "c:\hoge"
	"foo.txt2             -> ""
	*/
	##index_yen=strrstr($$1,"\\");
	##index_slash=strrstr($$1,"/");
	if((##index_yen==-1) && (##index_slash==-1)){
		//ディレクトリ区切り無し
		return "";
	}
	if(##index_slash < ##index_yen){
		return midstr($$1,0,##index_yen);
	}
	return midstr($$1,0,##index_slash);


GetShortPath:
	$$path=$$1;
	##obj=createobject("Scripting.FileSystemObject");
	##f  = callmethod_returnobj( ##obj, "GetFolder", $$path);
    $$ret = getpropstr(##f,"ShortPath");
    releaseobject ##f;
    releaseobject ##obj;
    return $$ret;

SetGlovalValue:
	setstaticvariable "ini_abs_filename",$g_ini_abs_filename,1;
	return result;

ClearGlovalValue:
	setstaticvariable "ini_abs_filename","",1;
	return ;

LoadDll:
	if(! #g_dll_dengaku){
		execmacro currentmacrodirectory+"\\internal\\ya_util_load_dengaku_dll.mac";
		#g_dll_dengaku=val(getresultex(-1));
		if(#g_dll_dengaku==0){
			return false;
		}
	}
	return true;


UnLoadDll:
	if(#g_dll_dengaku){
		freedll #g_dll_dengaku;
		#g_dll_dengaku=0;
	}
	return;

Trim:
	call TrimL, $$1;
	call TrimR, $$return;
	return $$return;

TrimL:		// ホワイトスペース除去
	while (unicode(leftstr($$1, 1))  <= ' ' && unicode(leftstr($$1, 1)) > 0) $$1 = rightstr($$1, strlen($$1) - 1);
	return $$1;

TrimR:
	while (unicode(rightstr($$1, 1)) <= ' ' && unicode(rightstr($$1, 1)) > 0) $$1 = leftstr($$1, strlen($$1) - 1);
	return $$1;

DumpArgs:
	debuginfo 1;
	debuginfo "==== $g_args[] ====";
	debuginfo sprintf("#g_args_num=%d",#g_args_num);
	##i=0;
	while(##i<#g_args_num){
		debuginfo sprintf("$g_args[%d]=%s",##i,$g_args[##i]);
		##i = ##i + 1;
	}
	debuginfo sprintf("$g_args_line=%s",$g_args_line);
	return ;
