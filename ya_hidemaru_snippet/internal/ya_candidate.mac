/*スニペット候補
与えられた文字列に最もマッチするスニペット候補を返す。

input	スニペット文字列の一部、又は、空白文字
return	スニペット文字列
*/

//--------------------------------------------------------------------------
//	グローバル変数
//--------------------------------------------------------------------------

//選択したスニペットのコマンド名と引数
$snippet_command_name			="";
#snippet_argument_num			=0;
#snippet_has_variable_argument	=false;

//固定引数Boxの識別子名
$snippet_gui_argument_id[0]		="";

//固定引数+可変引数Boxの識別子名
$snippet_gui_all_id[0]			="";
#snippet_gui_all_id_num			=0;

//ダイアログで入力された文字列
$message_loop_result			="";

//--------------------------------------------------------------------------
//	DLL
//--------------------------------------------------------------------------
#g_dengaku_dll=0;

//--------------------------------------------------------------------------
//	通知コード(const)
//--------------------------------------------------------------------------
$notify_ok		="200";
$notify_cancel	="201";

//--------------------------------------------------------------------------
//	Windows仮想キーコード(const)
//--------------------------------------------------------------------------
#VK_ESCAPE=0x1B;
#VK_RETURN=0x0D;


//--------------------------------------------------------------------------
//	メイン処理
//--------------------------------------------------------------------------
call main;
endmacro $$return;


main:
	call Start;
	$$ret=$$return;
	call UnLoadDengaku;
	return $$ret;

Start:
	debuginfo 1;
	if(false){
		execmacro currentmacrodirectory+"\\ya_candidate_menu.mac";
	}else{
		debuginfo "EXEC start";
		execmacro currentmacrodirectory+"\\ya_candidate_listbox.mac";
		debuginfo 1;
		debuginfo "EXEC finish";
	}
	$$abs_snippet_filename=getresultex(-1);
	if($$abs_snippet_filename==""){
		return "";
	}
	debuginfo "LAOD";
	call LoadDengaku;
	if(! ##return){
		return false;
	}
	call GetFileName $$abs_snippet_filename;
	call RemoveExtension $$return;
	$$bodyname = $$return;
	call ParseArgument $$bodyname;
	if(! ##return){
		return "";
	}
	if((#snippet_argument_num==0) && (#snippet_has_variable_argument==false)){
		//引数無し
		return $$bodyname;
	}
	call FormatFileName $$bodyname;
	$$title = $$return;
	call CreateDiralog $$title;
	if(! ##return){
		return "";
	}
	call MessageLoop;
	if(! ##return){
		return "";
	}

	return $snippet_command_name + " " + $message_loop_result;


/*
引数	スニペットのボディー名
		(例)dec.%
			if#r
			@cmd.%._

return 	以下変数に結果を返す。
		$snippet_command_name;
		#snippet_argument_num;
		#snippet_has_variable_argument;
*/
ParseArgument:
	$snippet_command_name="";
	#snippet_argument_num=0;
	#snippet_has_variable_argument=false;

	$$token = dllfuncstr(#g_dengaku_dll,"GETTOKEN",$$1,".");
	$snippet_command_name=$$token;
	if (dllfunc(#g_dengaku_dll,"HASMORETOKENS") == 0) {
		return true;
	}
	$$token = dllfuncstr(#g_dengaku_dll,"GETTOKEN","",".");
	while (1) {
		if($$token==""){
			break;
		}else if($$token=="%"){
			#snippet_argument_num = #snippet_argument_num + 1;
		}else if($$token=="_"){
			#snippet_has_variable_argument=true;
		}else{

		}
		##token_array_num = ##token_array_num + 1;
		if (dllfunc(#g_dengaku_dll,"HASMORETOKENS") == 0) {
			break;
		}
		$$token = dllfuncstr(#g_dengaku_dll,"GETTOKEN","",".");
	}
	return true;


/*ファイル拡張子を取り除く
bar.txt     -> bar
foo.bar.txt -> foo.bar
*/
RemoveExtension:
	##index=strrstr($$1,".");
	if(##index==-1){
		return $$1;
	}
	return leftstr($$1,##index);


/*ファイル名を取得する
c:\hoge\foo.txt     ->  foo.txt
c:\hoge/foo.bar.txt ->  foo.bar.txt
*/
GetFileName:
	##index_yen=strrstr($$1,"\\");
	##index_slash=strrstr($$1,"/");
	if((##index_yen==-1) && (##index_slash==-1)){
		//ディレクトリ区切り無し
		return $$1;
	}
	//memo:ディレクトリ区切りを読み飛ばすため +1 している
	if(##index_slash < ##index_yen){
		return midstr($$1,##index_yen+1);
	}
	return midstr($$1,##index_slash+1);


/*ファイル名をメニュー用に整形する
main     -> main
if.%.%._ -> if %1 %2 ...
*/
FormatFileName:
	/*
	if.%._
	-> $$token_array[0]="if"
	   $$token_array[0]="%1"
	   $$token_array[0]="..."
	*/
	$$token_array[0]	="";
	##token_array_num	=0;
	if(true){
		##arg_index			=0;

		$$token = dllfuncstr(#g_dengaku_dll,"GETTOKEN",$$1,".");
		while (1) {
			if($$token==""){
				break;
			}else if($$token=="%"){
				$$token_array[##token_array_num]="%"+str(##arg_index);
				##arg_index = ##arg_index + 1;
			}else if($$token=="_"){
				$$token_array[##token_array_num]="...";
			}else{
				$$token_array[##token_array_num]=$$token;
			}
			##token_array_num = ##token_array_num + 1;

			if (dllfunc(#g_dengaku_dll,"HASMORETOKENS") == 0) {
				break;
			}
			$$token = dllfuncstr(#g_dengaku_dll,"GETTOKEN","",".");
		}
	}

	/*join
	$$token_array[0]="if"
	$$token_array[0]="%1"
	$$token_array[0]="..."
	-> "if %1 ..."
	*/
	$$result="";
	{
		$$sep=" ";
		##i=0;
		while(##i < ##token_array_num){
			if(0<##i){
				$$result=$$result+$$sep;
			}
			$$result=$$result+$$token_array[##i];
			##i = ##i + 1;
		}
	}
	return $$result;


/*ダイアログを作成する
引数	ダイアログのタイトル名
*/
CreateDiralog:
	$$title = $$1;
	##default_width = 100;
	if(	dllfunc(#g_dengaku_dll,"NEWDIALOG","コマンドの引数を入力します ("+$$title+")",##default_width,"") == 0 ){
		return false;
	}

	##i=0;
	while(##i<#snippet_argument_num){
		$snippet_gui_argument_id[##i] = sprintf("Yas@Argument%d",##i);
		$snippet_gui_all_id[#snippet_gui_all_id_num] = $snippet_gui_argument_id[##i];
		#snippet_gui_all_id_num = #snippet_gui_all_id_num + 1;

		if(	dllfunc(#g_dengaku_dll,"NEWCONTROL", "text", "", sprintf("引数[%d]",##i)) == 0			||
			dllfunc(#g_dengaku_dll,"SETCTRLWIDTH", "", 8) == 0 						||
			dllfunc(#g_dengaku_dll,"NEWCONTROL", "edit", $snippet_gui_argument_id[##i], "") == 0		){
			return false;
		}
		##i = ##i + 1;
	}
	if(#snippet_has_variable_argument){
		$$variable_argument_id="Yas@VariableArgument";
		if(	dllfunc(#g_dengaku_dll,"NEWCONTROL", "text", "", "引数[...]") == 0				||
			dllfunc(#g_dengaku_dll,"SETCTRLWIDTH", "", 8) == 0 							||
			dllfunc(#g_dengaku_dll,"NEWCONTROL", "edit", $$variable_argument_id, "") == 0){
			return false;
		}
		$snippet_gui_all_id[#snippet_gui_all_id_num] = $$variable_argument_id;
		#snippet_gui_all_id_num = #snippet_gui_all_id_num + 1;
	}

	if(	dllfunc(#g_dengaku_dll,"NEWCONTROL", "text", "Yas@Message", "") == 0){
		return false;
	}
	if(	dllfunc(#g_dengaku_dll,"NEWCONTROL", "button", "Yas@Ok", "OK") == 0||
		dllfunc(#g_dengaku_dll,"SETCTRLNOTIFY","",$notify_ok) == 0 ||
		dllfunc(#g_dengaku_dll,"NEWCONTROL", "button", "Yas@Cancel", "Cancel") == 0	||
		dllfunc(#g_dengaku_dll,"SETCTRLNOTIFY","",$notify_cancel) == 0 ){
		return false;
	}

	##n = dllfunc(#g_dengaku_dll,"SHOWDIALOG", hidemaruhandle(0), 0);
	return true;


MessageLoop:
	call MessageLoopCore;
	##ret = ##return;
	#n = dllfunc(#g_dengaku_dll,"ENDDIALOG");
	return ##ret;


MessageLoopCore:
	while (1) {
		$$item = dllfuncstr(#g_dengaku_dll,"WAITCTRLNOTIFY",100);
		if($$item==$notify_cancel){
			return false;	//cancelボタン
		}else if($$item==$notify_ok){
			break;			//okボタン
		}

		if(iskeydown(#VK_ESCAPE)){
			//ESCキーが押されたのでキャンセルにする
			return false;
		}

		//固定引数に全て入力した時に「OKボタン」を有効にする。
		call FindNoInputTextBox;
		if(##return == -1){
			##n = dllfunc(#g_dengaku_dll,"ENABLECTRL",true, "Yas@Ok");
		}else{
			##n = dllfunc(#g_dengaku_dll,"ENABLECTRL",false,"Yas@Ok");
		}

		//Enterで引数を確定して次の引数へフォーカスを移す
		if(iskeydown(#VK_RETURN)){
			call ChangeForcus;
		}
	}

	//
	//ダイアログに入力した文字を連結して返す
	//
	$message_loop_result="";
	##i=0;
	while(##i<#snippet_argument_num){
		if(0<##i){
			$message_loop_result=$message_loop_result+" ";
		}
		$message_loop_result = $message_loop_result + dllfuncstr(#g_dengaku_dll,"GETCTRLSTRING", $snippet_gui_argument_id[##i]);
		##i = ##i + 1;
	}
	if(#snippet_has_variable_argument){
		if(#snippet_argument_num){
			$message_loop_result=$message_loop_result+" ";
		}
		$message_loop_result = $message_loop_result + dllfuncstr(#g_dengaku_dll,"GETCTRLSTRING", "Yas@VariableArgument");
	}
	return true;

ChangeForcus:
	$$forcused_control = dllfuncstr(#g_dengaku_dll,"GETFOCUSEDCTRL");
	call FindGuiIndex $$forcused_control;
	##gui_index=##return;
	if(##gui_index == -1){
		return ;
	}
	$$text = dllfuncstr(#g_dengaku_dll,"GETCTRLSTRING", $$forcused_control);
	$$text = dllfuncstr(#g_dengaku_dll,"LTRIM",$$text);
	$$text = dllfuncstr(#g_dengaku_dll,"RTRIM",$$text);
	if($$text==""){
		return ;
	}

	##gui_index = ##gui_index + 1;
	if(#snippet_gui_all_id_num<=##gui_index){
		//未入力のTextBoxへ移動する
		//pass
	}else{
		//次のコントロールへフォーカスを移す
		##n = dllfunc(#g_dengaku_dll,"SETFOCUSEDCTRL", $snippet_gui_all_id[##gui_index]);
	}
	return;

/*未入力のテキストBOXを探す
return 	== -1	未入力のテキストBOXは無い
		>= 0	未入力のテキストBOXへのインデックス
*/
FindNoInputTextBox:
	##i=0;
	while(##i<#snippet_argument_num){
		$$text = dllfuncstr(#g_dengaku_dll,"GETCTRLSTRING", $snippet_gui_argument_id[##i]);
		$$text = dllfuncstr(#g_dengaku_dll,"LTRIM",$$text);
		$$text = dllfuncstr(#g_dengaku_dll,"RTRIM",$$text);
		if($$text==""){
			return ##i;
		}
		##i = ##i + 1;
	}
	return -1;

/*
TotalItemToTextExists:
	##i=0;
	while(##i<#snippet_argument_num){
		$$text = dllfuncstr(#g_dengaku_dll,"GETCTRLSTRING", $snippet_gui_argument_id[##i]);
		$$text = dllfuncstr(#g_dengaku_dll,"LTRIM",$$text);
		$$text = dllfuncstr(#g_dengaku_dll,"RTRIM",$$text);
		if($$text==""){
			return false;
		}
		##i = ##i + 1;
	}
	return true;
*/

FindGuiIndex:
	$$id=$$1;
	##i=0;
	while(##i<#snippet_gui_all_id_num){
		if($snippet_gui_all_id[##i]==$$id){
			return ##i;
		}
		##i = ##i + 1;
	}
	return -1;

LoadDengaku:
	if(#g_dengaku_dll){
		return true;
	}
	#g_dengaku_dll=loaddll(macrodir + "\\DengakuDLL.dll");
	if (result) {
		return true;
	}
	#g_dengaku_dll=loaddll(hidemarudir + "\\DengakuDLL.dll");
	if (result) {
		return true;
	}
	//message "田楽DLLのロードに失敗しました\n" + "DengakuDLL.dllが秀丸マクロディレクトリに存在するか確認してください";
	return false;

UnLoadDengaku:
	if(#g_dengaku_dll){
		freedll #g_dengaku_dll;
		#g_dengaku_dll=0;
	}
	return;
