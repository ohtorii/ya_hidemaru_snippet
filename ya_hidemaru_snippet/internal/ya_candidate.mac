/*スニペット候補
与えられた文字列に最もマッチするスニペット候補を返す。

input	スニペット文字列の一部、又は、空白文字
return	スニペット文字列
*/

//--------------------------------------------------------------------------
//	グローバル変数
//--------------------------------------------------------------------------
#menu_array_len 	=0;
$menu_array[0]		=""; //メニューの文字列
$menu_filename[0]	="";

//選択したスニペットのコマンド名と引数
$snippet_command_name			="";
#snippet_argument_num			=0;
#snippet_has_variable_argument	=false;

//固定引数Boxの識別子名
$snippet_gui_argument_id[0]		="";

//固定引数+可変引数Boxの識別子名
$snippet_gui_all_id[0]			="";
#snippet_gui_all_id_num			=0;

//ダイアログで入力された文字列
$message_loop_result			="";

//再帰呼び出しの回数を制限するためのカウンター
//処理ミスで無限ループしてしまわないように念のため
#recusive_guarder=0;

//--------------------------------------------------------------------------
//	通知コード(const)
//--------------------------------------------------------------------------
$notify_ok		="200";
$notify_cancel	="201";

//--------------------------------------------------------------------------
//	Windows仮想キーコード(const)
//--------------------------------------------------------------------------
#VK_ESCAPE=0x1B;
#VK_RETURN=0x0D;


//--------------------------------------------------------------------------
//	メイン処理
//--------------------------------------------------------------------------
call main;
endmacro $$return;


main:
	execmacro currentmacrodirectory+"\\ya_util_get_snippet_dir.mac";
	$$snippet_root=getresultex(-1);
	if($$snippet_root==""){
		return "";
	}
	execmacro currentmacrodirectory+"\\ya_util_get_current_snippet_mode.mac";
	$$snippet_dir=getresultex(-1);
	if($$snippet_dir==""){
		return "";
	}

	call LoadDengaku;
	if(! ##return){
		return "";
	}

	call MakeMenuArray $$snippet_root, $$snippet_dir;
	if(!##return){
		return "";
	}
	if(#menu_array_len==0){
		return "";
	}
	//ファイル名をメニュー用に整形する
	{
		##i=0;
		while(##i < #menu_array_len){
			call RemoveExtension $menu_array[##i];
			$$filename			=$$return;
			$menu_filename[##i]	=$$filename;
			call FormatFileName $$filename;
			$menu_array[##i]=$$return;
			##i = ##i + 1;
		}
	}

	menuarray $menu_array, #menu_array_len;
	##index=result;
	if(##index==0){
		return "";
	}
	##index = ##index - 1;
	call ParseArgument $menu_filename[##index];
	if((#snippet_argument_num==0) && (#snippet_has_variable_argument==false)){
		//引数無し
		return $menu_array[##index];
	}
	call CreateDiralog $menu_array[##index];
	if(! ##return){
		return "";
	}
	call MessageLoop;
	if(! ##return){
		return "";
	}

	return $snippet_command_name + " " + $message_loop_result;


MakeMenuArray:
	if(10 < #recusive_guarder){
		return;
	}

	$$snippet_root	= $$1;
	$$current_dir	= $$2;

	call SurroundDoubleQuotation $$current_dir + "\\*.*";
	$$file_pattern	= $$return;

	//スニペットのファイル名を集める
	##r = dllfunc("ENUMFILE",$$file_pattern);
	while (1) {
		$$file = dllfuncstr("FINDNEXT");
		if ($$file == "") {
			break;
		}
		$$abs_filename = $$current_dir + "\\" + $$file;
		$menu_array[#menu_array_len]=$$file;
		#menu_array_len = #menu_array_len + 1;
	}
	//親ディレクトリに向かってスニペットファイルを探す
	call FindParentDir $$current_dir;
	$$parent_dir = $$return;
	if($$parent_dir==$$snippet_root){
		return true;
	}

	#recusive_guarder = #recusive_guarder + 1;
	call MakeMenuArray $$snippet_root,$$parent_dir;
	return ##return;


/*パスから親ディレクトリを見付ける

（例）
	"c:/foo/bar"
	-> "c:/foo"

	"c:/foo/bar//"
	-> "c:/foo"

	"c:/foo/bar/hoge.txt"
	-> "c:/foo/bar"

	"c:"
	-> "c:"
*/
FindParentDir:
	/*パス名の終端からディレクトリ区切り(\\/)を削除する
	*/
	call TrimString $$1, "\\/";
	$$dir = $$return;

	##index = strrstr($$dir,"\\");
	if(##index==-1){
		##index = strrstr($$dir,"/");
	}
	if(##index==-1){
		return $$dir;
	}
	return leftstr($$dir,##index);


SurroundDoubleQuotation:
	return "\"" + $$1 + "\"";

TrimString:
	$$space=$$2;
	if($$space==""){
		$$space="\r\n\t 　";
	}
	while(1){
	  ##word=strlen($$1);
	  //文字列の先頭に空白文字がある場合、空白文字を削除
	  if(strstr($$space,leftstr($$1,2))!=-1)$$1=rightstr($$1,##word-2);
	  else if(strstr($$space,rightstr($$1,2))!=-1)$$1=leftstr($$1,##word-2);
	  //ここまで全角文字の対処
	  else if(strstr($$space,leftstr($$1,1))!=-1)$$1=rightstr($$1,##word-1);
	  else if(strstr($$space,rightstr($$1,1))!=-1)$$1=leftstr($$1,##word-1);
	  else break;
	}
	return $$1;


/*ファイル拡張子を取り除く
bar.txt     -> bar
foo.bar.txt -> foo.bar
*/
RemoveExtension:
	##index=strrstr($$1,".");
	if(##index==-1){
		return $$1;
	}
	return leftstr($$1,##index);

/*
*/
ParseArgument:
	$snippet_command_name="";
	#snippet_argument_num=0;
	#snippet_has_variable_argument=false;

	$$token = dllfuncstr("GETTOKEN",$$1,".");
	$snippet_command_name=$$token;
	if (dllfunc("HASMORETOKENS") == 0) {
		return;
	}
	$$token = dllfuncstr("GETTOKEN","",".");
	while (1) {
		if($$token==""){
			break;
		}else if($$token=="%"){
			#snippet_argument_num = #snippet_argument_num + 1;
		}else if($$token=="_"){
			#snippet_has_variable_argument=true;
		}else{

		}
		##token_array_num = ##token_array_num + 1;
		if (dllfunc("HASMORETOKENS") == 0) {
			break;
		}
		$$token = dllfuncstr("GETTOKEN","",".");
	}
	return;

/*ファイル名をメニュー用に整形する
main     -> main
if.%.%._ -> if %1 %2 ...
*/
FormatFileName:
	/*
	if.%._
	-> $$token_array[0]="if"
	   $$token_array[0]="%1"
	   $$token_array[0]="..."
	*/
	$$token_array[0]	="";
	##token_array_num	=0;
	if(true){
		##arg_index			=0;

		$$token = dllfuncstr("GETTOKEN",$$1,".");
		while (1) {
			if($$token==""){
				break;
			}else if($$token=="%"){
				$$token_array[##token_array_num]="%"+str(##arg_index);
				##arg_index = ##arg_index + 1;
			}else if($$token=="_"){
				$$token_array[##token_array_num]="...";
			}else{
				$$token_array[##token_array_num]=$$token;
			}
			##token_array_num = ##token_array_num + 1;

			if (dllfunc("HASMORETOKENS") == 0) {
				break;
			}
			$$token = dllfuncstr("GETTOKEN","",".");
		}
	}

	/*join
	$$token_array[0]="if"
	$$token_array[0]="%1"
	$$token_array[0]="..."
	-> "if %1 ..."
	*/
	$$result="";
	{
		$$sep=" ";
		##i=0;
		while(##i < ##token_array_num){
			if(0<##i){
				$$result=$$result+$$sep;
			}
			$$result=$$result+$$token_array[##i];
			##i = ##i + 1;
		}
	}
	return $$result;

CreateDiralog:
	$$title = $$1;
	##default_width = 100;
	if(	dllfunc("NEWDIALOG","コマンドの引数を入力します ("+$$title+")",##default_width,"") == 0 ){
		return false;
	}

	##i=0;
	while(##i<#snippet_argument_num){
		$snippet_gui_argument_id[##i] = sprintf("Yas@Argument%d",##i);
		$snippet_gui_all_id[#snippet_gui_all_id_num] = $snippet_gui_argument_id[##i];
		#snippet_gui_all_id_num = #snippet_gui_all_id_num + 1;
		
		if(	dllfunc("NEWCONTROL", "text", "", sprintf("引数[%d]",##i)) == 0			||
			dllfunc("SETCTRLWIDTH", "", 8) == 0 						||
			dllfunc("NEWCONTROL", "edit", $snippet_gui_argument_id[##i], "") == 0		){
			return false;
		}
		##i = ##i + 1;
	}
	if(#snippet_has_variable_argument){
		$$variable_argument_id="Yas@VariableArgument";
		if(	dllfunc("NEWCONTROL", "text", "", "引数[...]") == 0				||
			dllfunc("SETCTRLWIDTH", "", 8) == 0 							||
			dllfunc("NEWCONTROL", "edit", $$variable_argument_id, "") == 0){
			return false;
		}
		$snippet_gui_all_id[#snippet_gui_all_id_num] = $$variable_argument_id;
		#snippet_gui_all_id_num = #snippet_gui_all_id_num + 1;
	}
	
	if(	dllfunc("NEWCONTROL", "text", "Yas@Message", "") == 0){
		return false;
	}
	if(	dllfunc("NEWCONTROL", "button", "Yas@Ok", "OK") == 0||
		dllfunc("SETCTRLNOTIFY","",$notify_ok) == 0 ||
		dllfunc("NEWCONTROL", "button", "Yas@Cancel", "Cancel") == 0	||
		dllfunc("SETCTRLNOTIFY","",$notify_cancel) == 0 ){
		return false;
	}

	##n = dllfunc("SHOWDIALOG", hidemaruhandle(0), 1);
	return true;


MessageLoop:
	call MessageLoopCore;
	##ret = ##return;
	#n = dllfunc("ENDDIALOG");
	return ##ret;


MessageLoopCore:
	while (1) {
		$$item = dllfuncstr("WAITCTRLNOTIFY",100);
		if($$item==$notify_cancel){
			return false;	//cancelボタン
		}else if($$item==$notify_ok){
			break;			//okボタン
		}
		
		if(iskeydown(#VK_ESCAPE)){
			//ESCキーが押されたのでキャンセルにする
			return false;
		}
		
		//固定引数に全て入力した時に「OKボタン」を有効にする。
		call FindNoInputTextBox;
		if(##return == -1){
			##n = dllfunc("ENABLECTRL",true, "Yas@Ok");
		}else{
			##n = dllfunc("ENABLECTRL",false,"Yas@Ok");
		}
		
		//Enterで引数を確定して次の引数へフォーカスを移す
		if(iskeydown(#VK_RETURN)){
			call ChangeForcus;
		}
	}
	
	//
	//ダイアログに入力した文字を連結して返す
	//
	$message_loop_result="";
	##i=0;
	while(##i<#snippet_argument_num){
		if(0<##i){
			$message_loop_result=$message_loop_result+" ";
		}
		$message_loop_result = $message_loop_result + dllfuncstr("GETCTRLSTRING", $snippet_gui_argument_id[##i]);
		##i = ##i + 1;
	}
	if(#snippet_has_variable_argument){
		if(#snippet_argument_num){
			$message_loop_result=$message_loop_result+" ";
		}
		$message_loop_result = $message_loop_result + dllfuncstr("GETCTRLSTRING", "Yas@VariableArgument");
	}
	return true;

ChangeForcus:
	$$forcused_control = dllfuncstr("GETFOCUSEDCTRL");
	call FindGuiIndex $$forcused_control;
	##gui_index=##return;
	if(##gui_index == -1){
		return ;
	}
	$$text = dllfuncstr("GETCTRLSTRING", $$forcused_control);
	$$text = dllfuncstr("LTRIM",$$text);
	$$text = dllfuncstr("RTRIM",$$text);
	if($$text==""){
		return ;
	}
	
	##gui_index = ##gui_index + 1;
	if(#snippet_gui_all_id_num<=##gui_index){
		//未入力のTextBoxへ移動する
		//pass
	}else{
		//次のコントロールへフォーカスを移す
		##n = dllfunc("SETFOCUSEDCTRL", $snippet_gui_all_id[##gui_index]);
	}
	return;

/*未入力のテキストBOXを探す
return 	== -1	未入力のテキストBOXは無い
		>= 0	未入力のテキストBOXへのインデックス
*/
FindNoInputTextBox:
	##i=0;
	while(##i<#snippet_argument_num){
		$$text = dllfuncstr("GETCTRLSTRING", $snippet_gui_argument_id[##i]);
		$$text = dllfuncstr("LTRIM",$$text);
		$$text = dllfuncstr("RTRIM",$$text);
		if($$text==""){
			return ##i;
		}
		##i = ##i + 1;
	}
	return -1;
	
TotalItemToTextExists:
	##i=0;
	while(##i<#snippet_argument_num){
		$$text = dllfuncstr("GETCTRLSTRING", $snippet_gui_argument_id[##i]);
		$$text = dllfuncstr("LTRIM",$$text);
		$$text = dllfuncstr("RTRIM",$$text);
		if($$text==""){
			return false;
		}
		##i = ##i + 1;
	}
	return true;

FindGuiIndex:
	$$id=$$1;
	##i=0;
	while(##i<#snippet_gui_all_id_num){
		if($snippet_gui_all_id[##i]==$$id){
			return ##i;
		}
		##i = ##i + 1;
	}
	return -1;

LoadDengaku:
	loaddll macrodir + "\\DengakuDLL.dll";
	if (result) {
		return true;
	}
	loaddll hidemarudir + "\\DengakuDLL.dll";
	if (result) {
		return true;
	}
	//message "田楽DLLのロードに失敗しました\n" + "DengakuDLL.dllが秀丸マクロディレクトリに存在するか確認してください";
	return false;
