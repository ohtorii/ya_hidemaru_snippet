/*指定されたディレクトリ以下のスニペット定義ファイルを閲覧するダイアログ。

（マクロ引数）
	無し

（マクロ返値）
	選択されたファイル名
	キャンセル or 失敗すると空白文字列を返します。

（使用例）
	execmacro "ya_text_viewer.mac";

*/


////////////////////////////////////////////////////////////////////////////
//		グローバル変数(const)
////////////////////////////////////////////////////////////////////////////
#g_snippets_list_width=30;
#g_dialog_height=50;
#g_dialog_width=100;
#g_max_args_num=16;



////////////////////////////////////////////////////////////////////////////
//		グローバル変数
////////////////////////////////////////////////////////////////////////////

//--------------------------------------------------------------------------
//DLL handle
//--------------------------------------------------------------------------
#g_dengaku_dll	=0;
#g_ht_tools_dll	=0;

//--------------------------------------------------------------------------
//マクロ引数
//--------------------------------------------------------------------------
$g_snippets_abs_dir 	= "";
$g_snippett_exts 		= "";

//--------------------------------------------------------------------------
//Dialog
//--------------------------------------------------------------------------
/*リストに対応するファイル名（絶対パス）
(例) [0] "c:\hidemaru-macro\ya-hidemaru-snippet\snippets\functions\text-mode\email.txt"
	 [1] "c:\hidemaru-macro\ya-hidemaru-snippet\snippets\functions\text-mode\@cmd.%._.txt"
	 		:
	 		:
*/
$g_abs_snippets_filename[0]		= "";
#g_abs_snippets_filename_len	= 0;

/*	$g_abs_snippets_filename[]に対応する引数情報
*/
#g_fixed_argumet_num[0]		=0;
#g_has_variable_argument[0]	=false;


//コントロール名
$g_list_ctrl_name 		= "lst1";
$g_text_ctrl_name 		= "mledt1";

/*リストコントロールのアイテム数
(memo)アイテムを1個追加したときに0となる。
*/
#g_list_ctrl_item_num	= -1;


//--------------------------------------
//スニペットモード名、スニペットモードのインデックス位置
//--------------------------------------
/* $g_snippet_mode_* 配列の個数
*/
#g_snippet_mode_num=0;

/*
(例)	[0]	"c:\hidemaru-macro\ya-hidemaru-snippet\snippets\functions\text-mode"
		[1]	"c:\hidemaru-macro\ya-hidemaru-snippet\snippets\functions\text-mode\c-mode"
			:
			:
*/
$g_snippet_mode_names[0]="";

/*スニペットモード名がリストの何番目なのか。
（例）	[0] 0		//$g_snippet_mode_names[0]に対応
		[1] 8		//$g_snippet_mode_names[1]に対応
*/
#g_snippet_mode_index[0]=0;


//--------------------------------------------------------------------------
//状態
//--------------------------------------------------------------------------
/*現在のスニペットモード
(例)"c:\hidemaru-macro\ya-hidemaru-snippet\snippets\functions\text-mode\c-mode\cpp-mode"
*/
$g_current_snippet_mode="";




////////////////////////////////////////////////////////////////////////////
//		処理
////////////////////////////////////////////////////////////////////////////
call Main;
endmacro $$return;

Main:
	call Initialize;
	if(! ##return){
		return"" ;
	}
	call Run;
	$$select_filename = $$return;
	call UnloadDll;
	return $$select_filename;


Run:
	call CreateDialog;
	if(! ##return){
		return "";
	}
	call MessageLoop;
	$$select_filename = $$return;
	call Finalize;
	return $$select_filename;

MessageLoop:
	$$prev_select_item 	= "?";

	//リストで上下キーを押し続けたときに適度な間隔でファイル内容を更新する。
	##interval			= 200;
	##prev_tick 		= 0;

	$$select_file		= "";

	while(1){
		$$name = "";
		while (strlen($$name) == 0) {
			##current_tick = tickcount;
			if(##interval < (##current_tick - ##prev_tick)){
				$$select_item = dllfuncstr(#g_dengaku_dll,"GETCTRLSTATE",$g_list_ctrl_name);
				if($$select_item != $$prev_select_item){
					if($$select_item=="0"){
						call ClearText;
					}else{
						##select = val($$select_item)-1;
						call UpdateText ##select;
						call UpdateArgumentEditor ##select;
						$$select_file = $$return;
					}
					$$prev_select_item=$$select_item;
				}
				##prev_tick = ##current_tick;
			}
			$$name = dllfuncstr(#g_dengaku_dll,"WAITCTRLNOTIFY",10);
		}

		if($$name == "0"){
			$$select_file="";
			break;
		}else if($$name == "1"){
			break;
		}
	}
	return $$select_file;


ClearText:
	##n=dllfunc(#g_dengaku_dll,"SETCTRLSTRING",$g_text_ctrl_name,"");
	return;


UpdateText:
	##index = ##1;
	if(##index < 0){
		return "";
	}
	if(#g_abs_snippets_filename_len <= ##index){
		return"" ;
	}

	$$path = $g_abs_snippets_filename[##index];
	if(existfile($$path,1) & 0x00000010){
		call ClearText;
		return"" ;
	}
	call LoadText $$path;
	$$text = $$return;
	##n=dllfunc(#g_dengaku_dll,"SETCTRLSTRING",$g_text_ctrl_name,$$text);
	return $$path;


LoadText:
	$$filename 		= $$1;
	##file_size 	= dllfunc(#g_ht_tools_dll, "GetFileSizeByte", $$filename);
	##file_handle 	= dllfunc(#g_ht_tools_dll, "FileOpen", $$filename, "r");
	$$text 			= dllfuncstr(#g_ht_tools_dll, "RdFileByte", ##file_handle, ##file_size);
	##dummy 		= dllfunc(#g_ht_tools_dll, "FileClose", ##file_handle);
	return $$text;


/* 引数エディタのGUIを更新する

(memo)手抜き実装です。
*/
UpdateArgumentEditor:
	##select = ##1;
	
	//無効化（キーボードフォーカスを得ない）＆空欄にする
	##frame_no=0;
	while(##frame_no<#g_max_args_num){
		$$frame=sprintf("frame%d",##frame_no);
		
		//無効化
		##n=dllfunc(#g_dengaku_dll,"ENABLECTRL",false,sprintf("edit%d_0",##frame_no));
		##n=dllfunc(#g_dengaku_dll,"ENABLECTRL",false,sprintf("edit%d_1",##frame_no));
		
		//空欄
		##n=dllfunc(#g_dengaku_dll,"SETCTRLSTATE",$$frame,"3");
		
		##frame_no = ##frame_no + 1;
	}
	
	//引数の情報にもとづいて適切なPageを表示する
	##argument_num = #g_fixed_argumet_num[##select];
	##has_variable_argument=#g_has_variable_argument[##select];
	##frame_no=0;
	while(##frame_no<##argument_num){
		$$frame=sprintf("frame%d",##frame_no);
		##n=dllfunc(#g_dengaku_dll,"SETCTRLSTATE",$$frame,"1");
		##n=dllfunc(#g_dengaku_dll,"ENABLECTRL",true,sprintf("edit%d_0",##frame_no));
		
		##frame_no = ##frame_no + 1;
	}
	if(##has_variable_argument){
		$$frame=sprintf("frame%d",##frame_no);
		##n=dllfunc(#g_dengaku_dll,"SETCTRLSTATE",$$frame,"2");
		##n=dllfunc(#g_dengaku_dll,"ENABLECTRL",true,sprintf("edit%d_1",##frame_no));
	}
	return ;


CreateDialog:
	//call DebugPrintSnippetModeNameAndIndex;
	call CreatePageAll;
	if(! ##return){
		call FailedCreateDialog;
		return false;
	}
	if(	dllfunc(#g_dengaku_dll,"NEWDIALOG","スニペット一覧",#g_snippets_list_width,"") == 0 ||
		/*スニペット一覧*/
		dllfunc(#g_dengaku_dll,"NEWCONTROL","list",$g_list_ctrl_name,"") == 0||
		dllfunc(#g_dengaku_dll,"SETCTRLHEIGHT","",#g_dialog_height) == 0	||
		dllfunc(#g_dengaku_dll,"SETCTRLWIDTH","",#g_snippets_list_width) == 0||
		dllfunc(#g_dengaku_dll,"NEWCOLUMN",80)==0||
		/*複数行テキスト表示*/
		dllfunc(#g_dengaku_dll,"NEWCONTROL","mledit",$g_text_ctrl_name)==0 ||
		dllfunc(#g_dengaku_dll,"SETCTRLHEIGHT",$g_text_ctrl_name,#g_dialog_height)==0 ||
		dllfunc(#g_dengaku_dll,"ENABLECTRL",false,$g_text_ctrl_name)==0
	){
		call FailedCreateDialog;
		return false;
	}
	call NewFrameAll;
	if(! ##return){
		call FailedCreateDialog;
		return false;
	}
	
	##frame_no=0;
	while(##frame_no<#g_max_args_num){
		$$frame=sprintf("frame%d",##frame_no);
		//$$frame=sprintf("frame%d",#g_max_args_num-##frame_no-1);
		
		//とりあえず空欄を表示しておく
		##n=dllfunc(#g_dengaku_dll,"SETCTRLSTATE",$$frame,"3");
		
		/*##n=dllfunc(#g_dengaku_dll,"ENABLECTRL",true,sprintf("edit%d_0",##frame_no));
		
		//非表示のコントロールは無効化する
		//そうしないと非表示のコントロールにキーボードフォーカスが移動し大変使いにくい。
		##n=dllfunc(#g_dengaku_dll,"ENABLECTRL",false,sprintf("edit%d_1",##frame_no));*/
		
		##frame_no = ##frame_no + 1;
	}
	
	call MakeFileTree $g_snippets_abs_dir, "";
	if(! ##return){
		return false;
	}
	call MakeSnippetsArgumentInfo;
	
	call SelectSnippetModeItem $g_current_snippet_mode;
	if(! ##return){
		//未選択状態なので最初のアイテムを選択する。
		##n = dllfunc(#g_dengaku_dll,"SETCTRLSTATE",$g_list_ctrl_name,"1");
	}
	if (!dllfunc(#g_dengaku_dll,"SHOWDIALOG",hidemaruhandle(0),1)){
		message("SHOWDIALOG に失敗しました");
		return false;
	}
	return true;


MakeFileTree:
	$$root_dir 		= $$1;
	$$space			= $$2;
	$$sub_dir		= "";
	##sub_dir_len 	= 0;
	
	//
	//カレントディレクトリにあるスニペットのファイル名を取得する（非再帰）
	//
	##prev__list_ctrl_item_num = #g_list_ctrl_item_num;
	call MakeFileItems $$root_dir, $$space;
	if(##return==-1){
		return false;
	}else if(0<##return){
		call MakeSnippetModeNameAndIndex $$root_dir, ##prev__list_ctrl_item_num;
	}
	
	call SurroundDoubleQuotation $$root_dir + "\\*.*";
	$$file_pattern = $$return;
	//
	//サブディレクトリを列挙する（非再帰）
	//
	##r = dllfunc(#g_dengaku_dll,"ENUMDIR",$$file_pattern);
	while (1) {
	    $$dir = dllfuncstr(#g_dengaku_dll,"FINDNEXT");
	    if ($$dir == "") break;
	    else if ($$dir == "." || $$dir == "..") continue;

		$$sub_dir[##sub_dir_len] = $$dir;
		##sub_dir_len = ##sub_dir_len + 1;
	}
	
	//
	//先ほど列挙したサブディレクトリを辿る
	//
	##index = 0;
	while (##index < ##sub_dir_len){
		$$current_sub_dir	= $$sub_dir[##index];
		$$abs_path 			= $$root_dir + "\\" + $$current_sub_dir;

		//リストコントロールへディレクトリを追加する
		call AppendListItem $$space, $$current_sub_dir, $$abs_path;
		if(! ##return){
			return false;
		}
		
		//
		//再帰的に処理する
		//
		call MakeFileTree $$abs_path, $$space+"　　　　";
		if(! ##return){
			return false;
		}
		##index = ##index + 1;
	}
	return true;

/*
return 	> 0		追加したアイテム数
		== -1	失敗
*/
MakeFileItems:
	$$root_dir	= $$1;
	$$space		= $$2;

	call SurroundDoubleQuotation $$root_dir + "\\" + $g_snippett_exts;
	$$file_pattern	= $$return;
	
	##append_num=0;
	##r = dllfunc(#g_dengaku_dll,"ENUMFILE",$$file_pattern);
	while (1) {
		$$filename = dllfuncstr(#g_dengaku_dll,"FINDNEXT");
		if ($$filename == "") {
			break;
		}
		$$abs_filename = $$root_dir + "\\" + $$filename;
		call AppendListItem $$space,$$filename,$$abs_filename;
		if(! ##return){
			return -1;
		}
		##append_num = ##append_num + 1;
	}
	return ##append_num;


AppendListItem:
	$$space 		= $$1;
	$$rel_filename 	= $$2;
	$$abs_filename	= $$3;

	$g_abs_snippets_filename[#g_abs_snippets_filename_len]	= $$abs_filename;
	#g_abs_snippets_filename_len 							= #g_abs_snippets_filename_len + 1;

	$$item_name=$$space+$$rel_filename;
	if(dllfunc(#g_dengaku_dll,"SETCTRLITEM",$g_list_ctrl_name,$$item_name) == 0){
		call FailedCreateDialog;
		return false;
	}
	#g_list_ctrl_item_num = #g_list_ctrl_item_num + 1;
	return true;


MakeSnippetModeNameAndIndex:
	$$abs_path=$$1;
	##index=##2;
	$g_snippet_mode_names[#g_snippet_mode_num]=$$abs_path;
	#g_snippet_mode_index[#g_snippet_mode_num]=##index;
	#g_snippet_mode_num = #g_snippet_mode_num + 1;
	return ;


DebugPrintSnippetModeNameAndIndex:
	debuginfo 1;
	debuginfo "==== DebugPrintSnippetModeNameAndIndex ====";
	##i=0;
	while(##i<#g_snippet_mode_num){
		debuginfo sprintf("[%d]%s",#g_snippet_mode_index[##i],$g_snippet_mode_names[##i]);
		##i = ##i + 1;
	}
	return ;


/*スニペットモードに対応するリストアイテムを選択する
return 	true	リストアイテムの選択に成功した
		false	リストアイテムの選択に失敗した
*/
SelectSnippetModeItem:
	debuginfo 0;
	debuginfo "==== SelectSnippetModeItem ====";
	$$snippet_dir=$g_current_snippet_mode;
	debuginfo "$$snippet_dir="+$$snippet_dir;
	##i=0;
	while(##i<#g_snippet_mode_num){
		if($$snippet_dir==$g_snippet_mode_names[##i]){
			//(memo)リストコントロールは1から開始なので+1する。
			##index=#g_snippet_mode_index[##i]+1;
			debuginfo "##index="+str(##index);
			##n = dllfunc(#g_dengaku_dll,"SETCTRLSTATE",$g_list_ctrl_name,str(##index));
			return true;
		}
		##i = ##i + 1;
	}
	return false;


CreatePageAll:
	##frame_no=0;
	while(##frame_no<#g_max_args_num){
		call CreatePage ##frame_no;
		//call CreatePage #g_max_args_num-##frame_no-1;
		if(!##return){
			return false;
		}
		##frame_no = ##frame_no + 1;
	}
	return true;
	

CreatePage:
	##frame_no=##1;
	
		//Page0 (固定引数)
	if (dllfunc(#g_dengaku_dll,"NEWDLGPAGE",sprintf("page%d_0",##frame_no),40) == 0 ||
		dllfunc(#g_dengaku_dll,"NEWCONTROL", "text", "", sprintf("引数[%d]",##frame_no)) == 0	||
		dllfunc(#g_dengaku_dll,"SETCTRLWIDTH", "", 8) == 0 						||
		dllfunc(#g_dengaku_dll,"NEWCONTROL", "edit", sprintf("edit%d_0",##frame_no), "") == 0		||
		dllfunc(#g_dengaku_dll,"ENABLECTRL",false,   sprintf("edit%d_0",##frame_no))==0||
	
		//Page1 (可変引数)
		dllfunc(#g_dengaku_dll,"NEWDLGPAGE",sprintf("page%d_1",##frame_no),40) == 0 ||
		dllfunc(#g_dengaku_dll,"NEWCONTROL", "text", "", "引数[...]") == 0		||
		dllfunc(#g_dengaku_dll,"SETCTRLWIDTH", "", 8) == 0 						||
		dllfunc(#g_dengaku_dll,"NEWCONTROL", "edit", sprintf("edit%d_1",##frame_no), "") == 0		||
		dllfunc(#g_dengaku_dll,"ENABLECTRL",false,   sprintf("edit%d_1",##frame_no))==0||

		//Page2（空欄）
		dllfunc(#g_dengaku_dll,"NEWDLGPAGE",sprintf("page%d_2",##frame_no),40) == 0 ||
		dllfunc(#g_dengaku_dll,"NEWCONTROL", "text", "", "") == 0		)
	{
		return false;
	}
	return true;


NewFrameAll:
	##frame_no=0;
	while(##frame_no<#g_max_args_num){
		/*引数入力のページ*/
		$$frame=sprintf("frame%d",##frame_no);
		//$$frame=sprintf("frame%d",#g_max_args_num-##frame_no-1);
		if(	
			dllfunc(#g_dengaku_dll,"NEWCONTROL","frame",$$frame,"") == 0 	||
			dllfunc(#g_dengaku_dll,"SETCTRLITEM",$$frame,sprintf("page%d_0",##frame_no),"-1") == 0 	||
			dllfunc(#g_dengaku_dll,"SETCTRLITEM",$$frame,sprintf("page%d_1",##frame_no),"-1") == 0 	||
			dllfunc(#g_dengaku_dll,"SETCTRLITEM",$$frame,sprintf("page%d_2",##frame_no),"-1") == 0
		){
			return false;
		}
		##frame_no = ##frame_no + 1;
	}
	return ;


/*スニペットの引数情報を作る

（入力）$g_abs_snippets_filename[]

（出力）#g_fixed_argumet_num[]
		#g_has_variable_argument[]
*/
MakeSnippetsArgumentInfo:
	##i=0;
	while (##i<#g_abs_snippets_filename_len) {
		call MakeSnippetsArgumentInfoOne ##i;
		##i = ##i + 1;
	}
	return true;


MakeSnippetsArgumentInfoOne:
	##index=##1;
	
	call GetFileName $g_abs_snippets_filename[##index];
	$$token = dllfuncstr(#g_dengaku_dll,"GETTOKEN",$$return,".");
	
	##num_argument			=0;
	##has_variable_argument	=false;
	while($$token != ""){
		if($$token=="%"){
			##num_argument = ##num_argument + 1;
		}else if($$token=="_"){
			##has_variable_argument=true;
		}else{
			//pass
		}
		if (dllfunc(#g_dengaku_dll,"HASMORETOKENS") == 0) {
			break;
		}
		$$token = dllfuncstr(#g_dengaku_dll,"GETTOKEN","",".");
	}
	#g_fixed_argumet_num[##index]	 =##num_argument;
	#g_has_variable_argument[##index]=##has_variable_argument;
	return ;


/*ファイル名を取得する
c:\hoge\foo.txt     ->  foo.txt
c:\hoge/foo.bar.txt ->  foo.bar.txt
*/
GetFileName:
	##index_yen=strrstr($$1,"\\");
	##index_slash=strrstr($$1,"/");
	if((##index_yen==-1) && (##index_slash==-1)){
		//ディレクトリ区切り無し
		return $$1;
	}
	//memo:ディレクトリ区切りを読み飛ばすため +1 している
	if(##index_slash < ##index_yen){
		return midstr($$1,##index_yen+1);
	}
	return midstr($$1,##index_slash+1);


FailedCreateDialog:
	message "ダイアログの生成に失敗しました";
	return;


SurroundDoubleQuotation:
	return "\"" + $$1 + "\"";


Initialize:
	execmacro currentmacrodirectory+"\\ya_util_get_snippet_dir.mac";
	$g_snippets_abs_dir = getresultex(-1);
	$g_snippett_exts	= "*.*";

	execmacro currentmacrodirectory+"\\ya_util_get_current_snippet_mode.mac";
	$g_current_snippet_mode=getresultex(-1);

	call LoadDll;
	if(! ##return){
		return false;
	}
	return true;


Finalize:
	##n=dllfunc(#g_dengaku_dll,"ENDDIALOG");
	return ;

LoadDll:
	if(#g_dengaku_dll==0){
		#g_dengaku_dll=loaddll(macrodir + "\\DengakuDLL.dll");
		if (! result) {
			#g_dengaku_dll=loaddll(hidemarudir + "\\DengakuDLL.dll");
			if (! result) {
				message "田楽DLLのロードに失敗しました\n" + "DengakuDLL.dllが秀丸のディレクトリに存在するか確認してください";
				return false;
			}
		}
	}

	if(#g_ht_tools_dll==0){
		#g_ht_tools_dll = loaddll(macrodir + "\\ht_tools.dll");
		if (!result) {
			#g_ht_tools_dll = loaddll(hidemarudir + "\\ht_tools.dll");
			if (!result) {
				message "ht_tool.dllのロードに失敗しました\n" + "ht_tool.dllが秀丸のディレクトリに存在するか確認してください";
				return false;
			}
		}
	}
	return true;


UnloadDll:
	if(#g_dengaku_dll){
		freedll #g_dengaku_dll;
		#g_dengaku_dll=0;
	}
	if(#g_ht_tools_dll){
		freedll #g_ht_tools_dll;
		#g_ht_tools_dll=0;
	}
	return;
